// Code generated by goa v3.4.3, DO NOT EDIT.
//
// account HTTP client CLI support package
//
// Command:
// $ goa gen algodexidx/design

package client

import (
	account "algodexidx/gen/account"
	"unicode/utf8"

	goa "goa.design/goa/v3/pkg"
)

// BuildAddPayload builds the payload for the account add endpoint from CLI
// flags.
func BuildAddPayload(accountAddAddress string) (*account.AddPayload, error) {
	var address string
	{
		address = accountAddAddress
	}
	v := &account.AddPayload{}
	v.Address = address

	return v, nil
}

// BuildGetPayload builds the payload for the account get endpoint from CLI
// flags.
func BuildGetPayload(accountGetAddress string) (*account.GetPayload, error) {
	var err error
	var address string
	{
		address = accountGetAddress
		if utf8.RuneCountInString(address) > 58 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("address", address, utf8.RuneCountInString(address), 58, false))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &account.GetPayload{}
	v.Address = address

	return v, nil
}

// BuildListPayload builds the payload for the account list endpoint from CLI
// flags.
func BuildListPayload(accountListView string) (*account.ListPayload, error) {
	var err error
	var view *string
	{
		if accountListView != "" {
			view = &accountListView
			if view != nil {
				if !(*view == "default" || *view == "full") {
					err = goa.MergeErrors(err, goa.InvalidEnumValueError("view", *view, []interface{}{"default", "full"}))
				}
			}
			if err != nil {
				return nil, err
			}
		}
	}
	v := &account.ListPayload{}
	v.View = view

	return v, nil
}
