// Code generated by goa v3.4.3, DO NOT EDIT.
//
// orders service
//
// Command:
// $ goa gen algodexidx/design

package orders

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The orders service provides information on open orders
type Service interface {
	// Get all open orders for a specific asset
	Get(context.Context, *GetPayload) (res *Orders, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "orders"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"get"}

// GetPayload is the payload type of the orders service get method.
type GetPayload struct {
	// ASA ID
	AssetID *uint64
	// Owner address(es)
	OwnerAddr []string
}

// Orders is the result type of the orders service get method.
type Orders struct {
	// Sell orders
	SellASAOrdersInEscrow []*Order
	// Buy orders
	BuyASAOrdersInEscrow []*Order
}

// Order is an individual buy or sell order
type Order struct {
	AssetLimitPriceInAlgos     string
	AsaPrice                   string
	AssetLimitPriceD           uint64
	AssetLimitPriceN           uint64
	AlgoAmount                 uint64
	AsaAmount                  uint64
	AssetID                    uint64
	AppID                      uint64
	EscrowAddress              string
	OwnerAddress               string
	MinimumExecutionSizeInAlgo uint64
	Round                      uint64
	UnixTime                   uint64
	FormattedPrice             string
	FormattedASAAmount         string
	Decimals                   uint64
}

// MakeAccessDenied builds a goa.ServiceError from an error.
func MakeAccessDenied(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "access_denied",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeMissingParameters builds a goa.ServiceError from an error.
func MakeMissingParameters(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "missing_parameters",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
